{
    "jpsType": "update",
    "jpsVersion": "0.99",
    "id": "glassfish-cluster-addon",
    "name": "GlassFish Cluster",
    "logo": "https://github.com/jelastic-jps/glassfish/raw/master/glassfish-cluster/img/glassfish-logo.png",
    "description": "Transforms standalone nodes to cluster",
    "globals": {
        "mountPath": "/opt/glassfish/home/.ssh",
        "port": "28080"
    },
    "onInstall": [{
        "addNodes": {
            "cloudlets": 16,
            "displayName": "DAS",
            "nodeGroup": "vds",
            "nodeType": "glassfish-das",
            "metadata": {
                "layer": "vds"
            },
            "dockerEnvVars": {
                "DAS": "true"
            },
            "dockerVolumes": [
                "${globals.mountPath}"
            ],
            "startService": false
        }
    }, {
        "installAddon": "configure"
    }],
    "addons": [{
        "id": "configure",
        "onInstall": [{
                "api": "env.control.AddContainerVolumeByGroup",
                "nodeGroup": "cp",
                "path": "${globals.mountPath}"
            }, {
                "api": "env.file.AddMountPointByGroup",
                "nodeGroup": "cp",
                "path": "${globals.mountPath}",
                "protocol": "nfs",
                "sourcePath": "${globals.mountPath}",
                "sourceNodeId": "${nodes.vds.first.id}",
                "name": "SSH Keys",
                "readOnly": false
            }, {
                "forEach(nodes.cp)": [{
                    "api": "env.control.LinkDockerNodes",
                    "sourceNodeId": "${nodes.vds.first.id}",
                    "targetNodeId": "${@i.id}",
                    "alias": "das",
                    "groupAlias": "das"
                }, {
                    "expose:28080->80": {
                        "id": "${@i.id}"
                    }
                }, {
                    "redirect": {
                        "id": "${@i.id}",
                        "address": "${@i.address}",
                        "act": "A"
                    }
                }]
            }, {
                "api": "env.control.ExecDockerRunCmd",
                "nodeId": "${nodes.vds.first.id}"
            }, {
                "restartContainers": {
                    "nodeGroup": "cp"
                }
            },
            "updateLink2Das"
        ],
        "success": {
            "text": "<table style='font-size:14px'><tr><td>Admin Console:</td><td><a href='${nodes.vds.first.adminUrl}' target='_blank'>${nodes.vds.first.adminUrl}</a></td></tr><tr><td>Login:</td><td><b>admin</b></td></tr><tr><td>Password:</td><td><b>glassfish</b></td></tr></table>"
        }
    }],
    "onBeforeServiceScaleOut[cp]": {
        "forEach(n:nodes.cp)": {
            "if (${@n.ismaster})": {
                "forEach(event.response.nodes)": [{
                    "redirect": {
                        "id": "${@i.id}",
                        "address": "${@n.address}",
                        "act": "D"
                    }
                }, {
                    "expose:28080->80": {
                        "id": "${@i.id}"
                    }
                }]
            }
        }
    },
    "onBeforeScaleIn[cp]": {
        "forEach(event.response.nodes)": {
            "cmd[${@i.id}]": "$HOME_DIR/service.sh delete"
        }
    },
    "actions": {
        "redirect": {
            "cmd[${this.id}]": [
                "iptables -t nat -${this.act} PREROUTING -p tcp -d ${this.address} --dport 4848 -j DNAT --to-destination ${nodes.vds.first.address}",
                "iptables -t nat -${this.act} POSTROUTING -p tcp --dst ${nodes.vds.first.address} --dport 4848 -j SNAT --to-source ${this.address}"
            ],
            "user": "root"
        },
        "expose:28080->80": {
            "cmd[${this.id}]": [
                "echo JELASTIC_EXPOSE=${globals.port} >> /.jelenv",
                "iptables -t nat -L 2>> /var/log/run.log | grep -qE \"REDIRECT.*${globals.port}\" || iptables -t nat -I PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-ports ${globals.port} -m comment --comment \"GlassFish HTTP Autoredirect\" >> /var/log/run.log"
            ],
            "user": "root"
        },
        "updateLink2Das": [{
            "localhost:4848->das:4848": {
                "nodeGroup": "cp"
            }
        }, {
            "localhost:4848->das:4848": {
                "nodeGroup": "vds"
            }
        }],
        "localhost:4848->das:4848": {
            "cmd": {
                "nodeGroup": "${this.nodeGroup}",
                "commands": "sed -i \"s/http:\\/\\/localhost:4848/https:\\/\\/node${nodes.vds.first.id}-${env.domain}:4848/g\" ${STACK_PATH}/glassfish/domains/domain1/docroot/index.html"
            }
        }
    }
}
