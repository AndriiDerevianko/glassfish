{
    "jpsType": "update",
    "jpsVersion": "0.99",
    "id": "glassfish-cluster-one-layer-postconfig",
    "name": "Auto Scalable GlassFish Cluster",
    "description": "Configure nodes for DAS cluster",
    "onBeforeScaleIn[cp]": "removeWorkers",
    "onBeforeServiceScaleOut[cp]": "setEnvVars",
    "onInstall": [{
        "forEach(nodes.cp)": {
            "if (${@i.ismaster})": [{
                "setNodeDisplayName[${@i.id}]": "DAS"
            }, {
                "log": "--> Set Env Vars"
            }, {
                "script": [
                    "var masterId = '${@i.id}';",
                    "var envName = '${env.envName}';",
                    "var resp = jelastic.env.control.GetEnvInfo(envName, session);",
                    "if (resp.result != 0) return resp;",
                    "var n = resp.nodes;",
                    "var resp = jelastic.env.control.GetContainerEnvVars(envName, session, masterId);",
                    "if (resp.result != 0) return resp;",
                    "var vars = resp.object;",
                    "for (var i = 0, l = n.length; i < l; i++) {",
                    "    if (n[i].id == masterId || n[i].nodeGroup != 'cp') continue;",
                    "    resp = jelastic.env.control.SetContainerEnvVars(envName, session, n[i].id, vars);",
                    "    if (resp.result != 0) return resp;",
                    "}",
                    "return resp;"
                ]
            }, {
                "log": "--> Add Volume"
            }, {
                "api": "env.control.AddContainerVolumeByGroup",
                "params": {
                    "nodeGroup": "cp",
                    "path": "/opt/glassfish/home/.ssh"
                }
            }, {
                "api": "env.file.AddMountPointByGroup",
                "params": {
                    "nodeGroup": "cp",
                    "path": "/opt/glassfish/home/.ssh",
                    "protocol": "nfs",
                    "sourceNodeId": "${@i.id}",
                    "sourcePath": "/opt/glassfish/home/.ssh",
                    "name": "ssk-keys"
                }
            }]
        }
    }],
    "actions": {
        "removeWorkers": [{
            "forEach(event.response.nodes)": {
                "cmd[${@i.id}]": "jem service stop",
                "user": "root"
            }
        }],
        "setEnvVars": {
            "forEach(nodes.cp)": {
                "if (${@i.ismaster})": {
                    "forEach(n:event.response.nodes)": {
                        "script": [
                            "var masterId = '${@i.id}';",
                            "var envName = '${env.envName}';",
                            "var resp = jelastic.env.control.GetContainerEnvVars(envName, session, masterId);",
                            "if (resp.result != 0) return resp;",
                            "var vars = resp.object;",
                            "return jelastic.env.control.SetContainerEnvVars(envName, session, ${@n.id}, vars);"
                        ]
                    }
                }
            }
        },
        "localhost:4848->das:4848": {
            "cmd": {
                "nodeId": "${this.nodeId}",
                "nodeGroup": "${this.nodeGroup}",
                "commands": "sed -i \"s/http:\\/\\/localhost:4848/https:\\/\\/${this.domain}:4848/g\" ${STACK_PATH}/glassfish/domains/domain1/docroot/index.html"
            }
        }
    },
    "success": {
        "text": "<table style='font-size:14px'><tr><td>Admin Console:</td><td><a href='${nodes.cp.first.adminUrl}:4848' target='_blank'>${nodes.cp.first.adminUrl}:4848</a></td></tr><tr><td>Login:</td><td><b>admin</b></td></tr><tr><td>Password:</td><td><b>glassfish</b></td></tr></table>",
        "email": "<table><tr><td>Admin Console:</td><td><a href='${nodes.cp.first.adminUrl}:4848' target='_blank'>${nodes.cp.first.adminUrl}:4848</a></td></tr><tr><td>Login:</td><td><b>admin</b></td></tr><tr><td>Password:</td><td><b>glassfish</b></td></tr></table>"
    }
}
